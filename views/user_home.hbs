<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<style>
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 26px;
        width: 26px;
        left: 4px;
        bottom: 4px;
        background-color: white;
        -webkit-transition: .4s;
        transition: .4s;
    }

    input:checked+.slider {
        background-color: #2196F3;
    }

    input:focus+.slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked+.slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

    .slider.round:before {
        border-radius: 50%;
    }
</style>

<body>
    <div class="p-8">
        <div class="rounded-2xl overflow-hidden shadow-lg">
            <div class="flex justify-center p-10 bg-gradient-to-r from-green-300 via-blue-500 to-purple-600">
                <div class="w-64 h-40 bg-gradient-to-r from-blue-700 via-blue-800 to-gray-900 rounded-lg shadow-lg">
                    <div class="flex justify-between m-2">
                        <svg xmlns="http://www.w3.org/2000/svg" width="34" height="34" viewBox="0 0 24 24"
                            stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round"
                            stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <rect x="3" y="5" width="18" height="14" rx="3" />
                            <line x1="3" y1="10" x2="21" y2="10" />
                            <line x1="7" y1="15" x2="7.01" y2="15" />
                            <line x1="11" y1="15" x2="13" y2="15" />
                        </svg>
                        <svg xmlns="http://www.w3.org/2000/svg" width="34" height="34" viewBox="0 0 24 24"
                            stroke-width="1.5" stroke="#ffffff" fill="none" stroke-linecap="round"
                            stroke-linejoin="round">
                            <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                            <circle cx="9.5" cy="9.5" r="5.5" fill="#fff" />
                            <circle cx="14.5" cy="14.5" r="5.5" />
                        </svg>
                    </div>
                    <div class="flex justify-center mt-4">
                        <h1 class="text-gray-400 font-thin font-os" id="showBalance">
                            ₹ {{data.balance}}
                        </h1>
                    </div>
                    <div class="flex flex-col justfiy-end mt-4 p-4 text-gray-400 font-quick">
                        {{!-- <p class="font-bold text-xs"><a href="#" style="color: white">Add Money</a></p> --}}
                        <h4 class="uppercase tracking-wider font-semibold text-xs">
                            {{data.username}}
                        </h4>
                    </div>
                </div>
            </div>
            <div class="text-center mt-8 mb-2 font-quick flex justify-center">
                <form action="/user/addMoney" method="post">
                    <div class="px-3 mb-6 md:mb-0">
                        <input
                            class="text-center appearance-none block w-full bg-gray-200 text-gray-700 border rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white"
                            id="grid-first-name" type="number" name="amt" placeholder="Enter Amount" required>
                    </div>
                    {{!-- <input type="text" name="amt" placeholder="enter amount"> --}}
                    <button type="submit" style="color: green; outline: none">
                        Add Money
                    </button>
                </form>
            </div>
            <div class="text-center mt-8 mb-2 font-quick flex justify-center">
                <label class="switch">
                    <input type="checkbox" onchange="sendData()" id="toggle">
                    <span class="slider round"></span>
                </label>
            </div>
            <div class="text-center mt-8 mb-2 font-quick flex justify-center">
                <span id="alert" style="color: red"></span>
            </div>
            <div class="p-8 flex justify-center">
                {{!-- <img src="/images/wallet.svg" alt="" height="50px" width="50px"> --}}
                <button
                    class="absolute inset-y-1 p-3 rounded-full bg-gradient-to-r from-green-300 via-blue-500 to-purple-600">
                    <svg xmlns="http://www.w3.org/2000/svg" class="w-10 h-10" viewBox="0 0 24 24" stroke-width="1"
                        stroke="#ffffff" fill="none" stroke-linecap="round" stroke-linejoin="round">
                        <path stroke="none" d="M0 0h24v24H0z" fill="none" />
                        <line x1="5" y1="12" x2="19" y2="12" />
                        {{!-- <line x1="15" y1="16" x2="19" y2="12" />
                        <line x1="15" y1="8" x2="19" y2="12" /> --}}
                    </svg>
                </button>
            </div>
        </div>
    </div>
</body>
<script>
    (function () {
        axios.get('/user/getDisableStatus')
            .then(({ data }) => {
                document.querySelector('#toggle').checked = data
            })
            .catch(err => console.log(err))
        setInterval(() => {
            axios.get('/user/getBalance')
                .then(({ data }) => {
                    if (data.balance === undefined) return document.getElementById('showBalance').innerHTML = 'Error'
                    document.getElementById('showBalance').innerHTML = `₹ ${data.balance}`
                    if (data.balance <= -500) {
                        document.getElementById('showBalance').innerHTML = `Your card is <b>Disabled</b><br>₹ ${data.balance}`
                        document.getElementById('alert').innerHTML = `Please pay the due amount to unblock your card`
                        document.querySelector('#toggle').checked = false
                    }
                })
                .catch(err => document.getElementById('showBalance').innerHTML = 'Error')
        }, 2000)
    })()

    function sendData() {
        if (!document.querySelector('#toggle').checked) {
            axios.get('/user/disable')
        } else {
            axios.get('/user/enable')
        }
    }
</script>